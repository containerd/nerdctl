freebsd_instance:
  image_family: freebsd-13-0

task:
  name: test-freebsd-amd64
  env:
    NERDCTL_RUN_ARGS: --net none knast/freebsd:13-STABLE echo "Nerdctl is up and running."
  install_script:
    - pkg install -y go containerd runj
    - daemon -o containerd.out containerd
  test_script:
    - go test -v ./pkg/...
    - cd cmd/nerdctl
    - sudo go run . run $NERDCTL_RUN_ARGS | grep running

docker_builder:
  name: windows
  platform: windows
  os_version: 2019
  env:
    CGO_ENABLED: 0
    # yamllint disable rule:key-duplicates
    matrix:
      ContainerdVersion: 1.5.7
      ContainerdVersion: 1.5.8
      ContainerdVersion: 1.6.0-beta.3
  build_script:
    - mkdir "C:\Windows\system32\config\systemprofile\AppData\Local\Temp\"
    - powershell hack/configure-windows-ci.ps1
    - refreshenv
    - go install .\cmd\nerdctl\

    - nerdctl run --rm gcr.io/k8s-staging-e2e-test-images/busybox:1.29-2 echo hello
    - nerdctl run --rm gcr.io/k8s-staging-e2e-test-images/busybox:1.29-2 sh -euxc "echo hello2"

    - nerdctl run -d --name nerdctl-test-exec gcr.io/k8s-staging-e2e-test-images/busybox:1.29-2 sleep 1h
    - nerdctl exec nerdctl-test-exec echo hello3
    - nerdctl rm -f nerdctl-test-exec

    - nerdctl run -d --name nerdctl-test-exec gcr.io/k8s-staging-e2e-test-images/busybox:1.29-2 sh -euxc "sleep 1h"
    - nerdctl exec nerdctl-test-exec sh -euxc "echo hello4"
    - nerdctl rm -f nerdctl-test-exec
