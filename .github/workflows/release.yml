name: Release
on:
  push:
    tags:
    - 'v*'
    - 'test-action-release-*'
env:
  GO111MODULE: on
jobs:
  osx-release:
    runs-on: macos-11
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
    - name: "install packages (osx)"
      if: runner.os == 'macOS'
      run: |
        brew install gnu-tar
        cp /usr/local/bin/gtar /usr/local/bin/tar
    - name: "Compile binaries"
      run: make artifacts
    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: osx-artifacts
        path: ${{ github.workspace }}/${{env.working-directory}}/_output/nerdctl-*
  release:
    runs-on: ubuntu-20.04
    needs: osx-release
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
    - name: "Compile binaries"
      run: make artifacts
    - name: "downloading artifacts from external jobs"
      uses: actions/download-artifact@v2
      with:
        name: osx-artifacts
        path: osx-artifacts
    - name: "place and display artifacts"
      run: |
        ls -lR osx-artifacts
        mv osx-artifacts/nerdctl-* _output/
        ls -lR _output
    - name: "SHA256SUMS"
      run: |
        ( cd _output; sha256sum nerdctl-* ) | tee /tmp/SHA256SUMS
        mv /tmp/SHA256SUMS _output/SHA256SUMS
    - name: "The sha256sum of the SHA256SUMS file"
      run: (cd _output; sha256sum SHA256SUMS)
    - name: "Prepare the release note"
      run: |
        tag="${GITHUB_REF##*/}"
        shasha=$(sha256sum _output/SHA256SUMS | awk '{print $1}')
        cat <<-EOF | tee /tmp/release-note.txt
        ${tag}

        $(hack/generate-release-note.sh)
        - - -
        The binaries were built automatically on GitHub Actions.
        The build log is available for 90 days: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

        The sha256sum of the SHA256SUMS file itself is \`${shasha}\` .
        EOF
    - name: "Create release"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        tag="${GITHUB_REF##*/}"
        asset_flags=()
        for f in _output/*; do asset_flags+=("-a" "$f"); done
        hub release create "${asset_flags[@]}" -F /tmp/release-note.txt --draft "${tag}"
