name: proofing

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:

env:
  GOTOOLCHAIN: local

jobs:
  proofing:
    name: "proofing"
    timeout-minutes: 15
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    steps:
      - name: "Checkout project"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 1

      - name: "Install go"
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b  # v5.4.0
        with:
          go-version: 1.24
          check-latest: true

      - name: setup
        run: |
          set -x

          CLI=docker ./mod/proofing/spoof.sh server::start ./pkg/testutil/images.env

          # Check the server is reachable
          # This is working
          # curl -iv https://proofing:443/v2 || true

          # Restart services so they catch-up on the system store changes?
          sudo systemctl stop containerd || true
          sudo systemctl start containerd || true
          systemctl --user stop containerd || true
          systemctl --user start containerd || true
          sudo systemctl stop docker || true
          sudo systemctl start docker || true

          make binaries
          sudo cp _output/nerdctl /usr/local/bin
          sudo nerdctl pull --quiet debian
          sudo nerdctl tag debian proofing:443/debian || true
          # sudo nerdctl --insecure-registry push proofing:443/debian || true
          sudo nerdctl push --quiet proofing:443/debian || true

#            sudo -E PATH="_output:$PATH" ./mod/proofing/spoof.sh server::seed ./pkg/testutil/images.env
      - name: test in container
        run: |
          set -x

          docker ps -a
          docker run -v $(pwd):/src --link proofing debian sh -c -- 'cd /src; apt-get -qq update; apt-get -qq install curl; ./mod/proofing/spoof.sh guest::configure ./pkg/testutil/images.env; curl -iv "https://docker.io/v2"; echo BOOO; cat /etc/hosts; echo BOOO; curl -iv https://proofing/v2/'
