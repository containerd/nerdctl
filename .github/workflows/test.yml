name: test

on:
  push:
    branches:
      - master
      - 'release/**'
  pull_request:

jobs:
  project:
    name: Project Checks
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
      with:
        path: src/github.com/containerd/nerdctl
        fetch-depth: 100
    - uses: containerd/project-checks@v1.0.2
      with:
        working-directory: src/github.com/containerd/nerdctl

  golangci-lint:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.35
        args: --verbose

  test-unit:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Run unit tests"
      run: go test -v ./pkg/...

  test-integration:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      matrix:
        containerd: [v1.4.5, v1.6.0, main]
    env:
      CONTAINERD_VERSION: "${{ matrix.containerd }}"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Prepare integration test environment"
      run: DOCKER_BUILDKIT=1 docker build -t test-integration --target test-integration --build-arg CONTAINERD_VERSION=${CONTAINERD_VERSION} .
    - name: "Remove snap loopback devices (conflicts with our loopback devices in TestRunDevice)"
      run: |
        sudo systemctl disable --now snapd.service snapd.socket
        sudo apt-get purge -y snapd
        sudo losetup -Dv
        sudo losetup -lv
    - name: "Register QEMU (tonistiigi/binfmt)"
      run: docker run --privileged --rm tonistiigi/binfmt --install all
    - name: "Run integration tests"
      run: docker run -t --rm --privileged test-integration

  test-integration-rootless:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    strategy:
      matrix:
        containerd: [v1.4.5, v1.6.0, main]
    env:
      CONTAINERD_VERSION: "${{ matrix.containerd }}"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Register QEMU (tonistiigi/binfmt)"
      run: docker run --privileged --rm tonistiigi/binfmt --install all
    - name: "Prepare (network driver=slirp4netns, port driver=builtin)"
      run: DOCKER_BUILDKIT=1 docker build -t test-integration-rootless --target test-integration-rootless --build-arg CONTAINERD_VERSION=${CONTAINERD_VERSION} .
    - name: "Test    (network driver=slirp4netns, port driver=builtin)"
      run: docker run -t --rm --privileged test-integration-rootless
    - name: "Prepare (network driver=slirp4netns, port driver=slirp4netns)"
      run: DOCKER_BUILDKIT=1 docker build -t test-integration-rootless-port-slirp4netns --target test-integration-rootless-port-slirp4netns --build-arg CONTAINERD_VERSION=${CONTAINERD_VERSION} .
    - name: "Test    (network driver=slirp4netns, port driver=slirp4netns)"
      run: docker run -t --rm --privileged test-integration-rootless-port-slirp4netns

  cross:
    runs-on: ubuntu-20.04
    timeout-minutes: 40
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Cross"
      run: make artifacts

  test-integration-docker-compatibility:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Register QEMU (tonistiigi/binfmt)"
      run: docker run --privileged --rm tonistiigi/binfmt --install all
    - name: "Ensure that the integration test suite is compatible with Docker"
      run: go test -v -exec sudo ./cmd/nerdctl/... -args -test.target=docker -test.kill-daemon
