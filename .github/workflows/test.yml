name: test

on:
  push:
    branches:
      - master
      - 'release/**'
  pull_request:

jobs:
  golangci-lint:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.35
        args: --verbose

  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    strategy:
      matrix:
        containerd: [1.4.3, 1.5.0-beta.2]
    env:
      CONTAINERD_VERSION: "${{ matrix.containerd }}"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Prepare test environment"
      run: DOCKER_BUILDKIT=1 docker build -t test --target test --build-arg CONTAINERD_VERSION=${CONTAINERD_VERSION} .
    - name: "Test"
      run: docker run -t --rm --privileged test go test -v github.com/AkihiroSuda/nerdctl/... -test.kill-daemon

  cross:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Cross"
      run: make artifacts

  test-docker-compatibility:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Ensure that the test suite is compatible with Docker"
      run: go test -v -exec sudo github.com/AkihiroSuda/nerdctl/cmd/nerdctl -test.target=docker -test.kill-daemon

  test-cgroup2:
    name: "Cgroup2 + rootless"
    # nested virtualization is only available on macOS hosts
    runs-on: macos-10.15
    timeout-minutes: 40
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    # Vagrant is slow, so we build binaries outside Vagrant
    - name: "Build binaries"
      run: |
        GOOS=linux make nerdctl nerdctl.test
    - name: "Cache ~/.vagrant.d/boxes"
      uses: actions/cache@v2
      with:
        path: ~/.vagrant.d/boxes
        key: vagrant-${{ hashFiles('Vagrantfile*') }}
    - name: "Boot VM"
      run: |
        vagrant up
        vagrant ssh-config >> ~/.ssh/config
    - name: "Install rootless containerd"
      run: ssh default -- containerd-rootless-setuptool.sh install
    - name: "Run tests (rootless)"
      run: ssh default -- "CONTAINERD_SNAPSHOTTER=native /vagrant/_output/nerdctl.test -test.v -test.kill-daemon"
    - name: "Uninstall rootless containerd"
      run: ssh default -- containerd-rootless-setuptool.sh uninstall
