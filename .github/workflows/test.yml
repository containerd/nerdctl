name: test

on:
  push:
    branches:
      - master
      - 'release/**'
  pull_request:

jobs:
  project:
    name: Project Checks
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
      with:
        path: src/github.com/containerd/nerdctl
        fetch-depth: 25
    - uses: containerd/project-checks@v1
      with:
        working-directory: src/github.com/containerd/nerdctl

  golangci-lint:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.35
        args: --verbose

  test-unit:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Run unit tests"
      run: go test -v ./pkg/...

  test-integration:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        containerd: [1.4.5, 1.5.8, 1.6.0-beta.2, 1.6.0-beta.3]
    env:
      CONTAINERD_VERSION: "${{ matrix.containerd }}"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Prepare integration test environment"
      run: DOCKER_BUILDKIT=1 docker build -t test-integration --target test-integration --build-arg CONTAINERD_VERSION=${CONTAINERD_VERSION} .
    - name: "Remove snap loopback devices (conflicts with our loopback devices in TestRunDevice)"
      run: |
        sudo systemctl disable --now snapd.service snapd.socket
        sudo apt-get purge -y snapd
        sudo losetup -Dv
        sudo losetup -lv
    - name: "Register QEMU (tonistiigi/binfmt)"
      run: docker run --privileged --rm tonistiigi/binfmt --install all
    - name: "Run integration tests"
      run: docker run -t --rm --privileged test-integration go test -v ./cmd/nerdctl/... -args -test.kill-daemon

  test-integration-rootless:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        containerd: [1.4.5, 1.5.8, 1.6.0-beta.2, 1.6.0-beta.3]
    env:
      CONTAINERD_VERSION: "${{ matrix.containerd }}"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Register QEMU (tonistiigi/binfmt)"
      run: docker run --privileged --rm tonistiigi/binfmt --install all
    - name: "Prepare (network driver=slirp4netns, port driver=builtin)"
      run: DOCKER_BUILDKIT=1 docker build -t test-integration-rootless --target test-integration-rootless --build-arg CONTAINERD_VERSION=${CONTAINERD_VERSION} .
    - name: "Test    (network driver=slirp4netns, port driver=builtin)"
      run: docker run -t --rm --privileged test-integration-rootless
    - name: "Prepare (network driver=slirp4netns, port driver=slirp4netns)"
      run: DOCKER_BUILDKIT=1 docker build -t test-integration-rootless-port-slirp4netns --target test-integration-rootless-port-slirp4netns --build-arg CONTAINERD_VERSION=${CONTAINERD_VERSION} .
    - name: "Test    (network driver=slirp4netns, port driver=slirp4netns)"
      run: docker run -t --rm --privileged test-integration-rootless-port-slirp4netns

  cross:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Cross"
      run: make artifacts

  test-integration-docker-compatibility:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: "Register QEMU (tonistiigi/binfmt)"
      run: docker run --privileged --rm tonistiigi/binfmt --install all
    - name: "Ensure that the integration test suite is compatible with Docker"
      run: go test -v -exec sudo ./cmd/nerdctl/... -args -test.target=docker -test.kill-daemon

  test-integration-cgroup2:
    # nested virtualization is only available on macOS hosts
    runs-on: macos-10.15
    timeout-minutes: 50
    env:
      VAGRANT_VAGRANTFILE: hack/Vagrantfile.fedora
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    # Vagrant is slow, so we build binaries outside Vagrant
    - name: "Build binaries"
      run: |
        GOOS=linux make binaries
        GOOS=linux go test -c ./cmd/nerdctl
    - name: "Boot VM"
      run: |
        vagrant up
        vagrant ssh-config >> ~/.ssh/config
    - name: "Show info"
      run: ssh default -- sudo nerdctl info
    - name: "Run tests"
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        retry_on: error
        max_attempts: 2
        # TODO: enable -test.kill-daemon
        command: ssh default -- "sudo /vagrant/nerdctl.test -test.v"
    - name: "Install rootless containerd"
      run: |
        ssh default -- containerd-rootless-setuptool.sh install
    - name: "Show info (rootless)"
      run: ssh default -- nerdctl info
    - name: "Run tests (rootless)"
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        retry_on: error
        max_attempts: 2
        command: ssh default -- "/vagrant/nerdctl.test -test.v -test.kill-daemon"
    - name: "Uninstall rootless containerd"
      run: ssh default -- containerd-rootless-setuptool.sh uninstall
